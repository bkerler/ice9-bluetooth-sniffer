# - Find LIBBLADERF
# Find the native LIBBLADERF includes and library
# This module defines
#  LIBBLADERF_INCLUDE_DIR, where to find bladerf.h, etc.
#  LIBBLADERF_LIBRARIES, the libraries needed to use LIBBLADERF.
#  LIBBLADERF_FOUND, If false, do not try to use LIBBLADERF.
# also defined, but not for general use are
#  LIBBLADERF_LIBRARY, where to find LIBBLADERF.

find_package(PkgConfig)
pkg_check_modules(PC_LIBHACKRF QUIET libbladeRF)

FIND_PATH(LIBBLADERF_INCLUDE_DIR
    NAMES libbladeRF.h
    HINTS
        ${LIBBLADERF_DIR}/include
        ${PC_LIBBLADERF_INCLUDEDIR}
        ${PC_LIBBLADERF_INCLUDE_DIRS}
        /opt/homebrew/include
        /opt/local/include
        /usr/include
        /usr/local/include
)

FIND_LIBRARY(LIBBLADERF_LIBRARY
    NAMES bladeRF
    HINTS
        $ENV{LIBBLADERF_DIR}/lib
        ${PC_LIBBLADERF_LIBDIR}
        ${PC_LIBBLADERF_LIBRARY_DIRS}
)

include(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(BladeRF DEFAULT_MSG LIBBLADERF_LIBRARY LIBBLADERF_INCLUDE_DIR)

IF (LIBBLADERF_LIBRARY AND LIBBLADERF_INCLUDE_DIR)
    SET(LIBBLADERF_LIBRARIES ${LIBBLADERF_LIBRARY})
    SET(LIBBLADERF_FOUND "YES")
ELSE (LIBBLADERF_LIBRARY AND LIBBLADERF_INCLUDE_DIR)
    SET(LIBBLADERF_FOUND "NO")
ENDIF (LIBBLADERF_LIBRARY AND LIBBLADERF_INCLUDE_DIR)

IF (LIBBLADERF_FOUND)
    IF (NOT LIBBLADERF_FIND_QUIETLY)
        MESSAGE(STATUS "Found bladeRF: ${LIBBLADERF_LIBRARIES}")
    ENDIF (NOT LIBBLADERF_FIND_QUIETLY)
ELSE (LIBBLADERF_FOUND)
    IF (LIBBLADERF_FIND_REQUIRED)
        MESSAGE(FATAL_ERROR "Could not find bladeRF library")
    ENDIF (LIBBLADERF_FIND_REQUIRED)
ENDIF (LIBBLADERF_FOUND)

# Deprecated declarations.
GET_FILENAME_COMPONENT (NATIVE_LIBBLADERF_LIB_PATH ${LIBBLADERF_LIBRARY} PATH)

MARK_AS_ADVANCED(
        LIBBLADERF_LIBRARY
        LIBBLADERF_INCLUDE_DIR
)

set(LIBBLADERF_INCLUDE_DIRS ${LIBBLADERF_INCLUDE_DIR})
set(LIBBLADERF_LIBRARIES ${LIBBLADERF_LIBRARY})